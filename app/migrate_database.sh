#!/bin/bash

# Colores para salida
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Verificando estado del contenedor...${NC}"
CONTAINER_STATUS=$(docker inspect --format='{{.State.Status}}' dmarcdefensespoofingtool-dmarcdefense-app-1 2>/dev/null)

if [ $? -ne 0 ] || [ "$CONTAINER_STATUS" != "running" ]; then
    echo -e "${RED}‚ùå El contenedor no est√° en ejecuci√≥n. Iniciando contenedor...${NC}"
    
    # Si no est√° ejecut√°ndose, iniciarlo primero
    docker-compose up -d
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå Error al iniciar el contenedor. Verifique los logs para m√°s detalles.${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ Contenedor iniciado correctamente.${NC}"
else
    echo -e "${GREEN}‚úÖ El contenedor ya est√° en ejecuci√≥n.${NC}"
fi

echo -e "${YELLOW}‚è≥ Esperando 5 segundos para que la aplicaci√≥n est√© lista...${NC}"
sleep 5

echo -e "${YELLOW}üîß Migrando la base de datos...${NC}"
docker exec dmarcdefensespoofingtool-dmarcdefense-app-1 python migrate_database.py

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Migraci√≥n completada exitosamente.${NC}"
else
    echo -e "${RED}‚ùå Error en la migraci√≥n. Verifique los logs para m√°s detalles.${NC}"
    docker logs dmarcdefensespoofingtool-dmarcdefense-app-1 | tail -50
    exit 1
fi

echo -e "${YELLOW}üîÑ Reiniciando el contenedor para aplicar los cambios...${NC}"
docker-compose restart

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Contenedor reiniciado correctamente.${NC}"
    echo -e "${GREEN}   La aplicaci√≥n ahora deber√≠a funcionar con la estructura actualizada de la base de datos.${NC}"
else
    echo -e "${RED}‚ùå Error al reiniciar el contenedor.${NC}"
    exit 1
fi
